(* Lexer para Gramática No. 4 *)

(* Introducir cualquier header aqui *)

let delim = [' ''\t''\n']
let WS = delim+
let letter = ['A'-'Z''a'-'z']
let str = (_)*
let digit = ['0'-'9']
let digits = digit+
let ID = letter(letter|str|digit)*
let NUMBER = digits(.digits)?('E'['+''-']?digits)?
let PLUS = ['+']
let TIMES = ['*']
let LPAREN = ['(']
let RPAREN = [')']
let MINUS = ['-']
let DIV = ['/']
let SEMICOLON = [';']
let ASSIGNOP = [':''=']
let LT = ['<']
let EQ = ['=']

rule tokens = 
    WS
  | ID        { return ID }               (* Cambie por una acción válida, que devuelva el token *)
  | NUMBER    { return NUMBER }
  | SEMICOLON       { return SEMICOLON }
  | ASSIGNOP      { return ASSIGNOP }
  | LT       { return LT }
  | EQ       { return EQ }
  | PLUS       { return PLUS }
  | MINUS       { return MINUS }
  | TIMES       { return TIMES }
  | DIV       { return DIV }
  | LPAREN       { return LPAREN }
  | RPAREN       { return RPAREN }

(* Introducir cualquier trailer aqui *)